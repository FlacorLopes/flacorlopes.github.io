{"version":3,"sources":["components/styles/MovieDetails.module.css","components/styles/SearchResult.module.css","components/styles/Header.module.css","components/styles/Search.module.css","components/styles/Paginator.module.css","components/styles/Circle.module.css","components/styles/TagList.module.css","App.module.css","components/Header.jsx","API.js","SearchContext.jsx","components/Search.jsx","components/Circle.jsx","components/Paginator.jsx","components/TagList.jsx","components/SearchResult.jsx","components/ResultList.jsx","components/pages/Home.jsx","components/InfoBlock.jsx","utils.js","components/MovieDetails.jsx","components/pages/Detalhes.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","className","styles","header","to","API_KEY","ptBR","BASE_URL","GENRE_IDS_URL","TV_GENRE_IDS_URL","API_CONFIG","MOVIES_QUERY","query","genre","year","page","encodeURIComponent","GET_API_CONFIGS","a","localStorage","getItem","fetch","config","json","jsonConfig","setItem","JSON","stringify","parse","GET_API_GENRES","movieFetch","movieJSON","TVFetch","TvJSON","filteredGenres","genres","filter","tv_genre","some","movie_genre","id","SearchContext","createContext","SearchStorage","children","useState","tags","setTags","setQuery","searchResults","setSearchResults","totalResults","setTotalResults","apiPage","setApiPage","selectedMovie","setSelectedMovie","currentPage","setCurrentPage","useEffect","getGenres","loadQuery","trim","length","response","total_results","getResultData","result","title","release","Date","release_date","toLocaleDateString","synopsis","overview","rate","vote_average","genre_ids","map","find","tag","posterImg","poster_path","images","secure_base_url","poster_sizes","results","Provider","value","handleSearch","event","preventDefault","genreID","findIndex","name","toLowerCase","toLocaleLowerCase","Search","searchInput","useRef","useContext","onSubmit","current","type","placeholder","search","onChange","target","onBlur","ref","Circle","content","width","font","circle","style","height","fontSize","Paginator","action","pages","paginator","Array","fill","index","key","onClick","scrollIntoView","TagList","Math","random","SearchResult","releaseDate","poster","searchResult","backgroundImage","column","innerHeader","rating","display","flexDirection","paddingLeft","src","alt","mobileImage","ResultList","ceil","from","slice","data","movieData","selectMovie","Home","mainSection","InfoBlock","info","format","isNaN","isFinite","Intl","NumberFormat","currency","releaseStatus","getLanguage","detailedInfo","spoken_languages","err","getVideoKey","videos","MovieDetails","movie","setDetailedInfo","navigate","useNavigate","movie_id","getData","container","contentColumn","infoContainer","status","runtime","parseInt","budget","revenue","tagsAndRate","frameBorder","allow","allowFullScreen","Detalhes","App","path","element","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","StrictMode","document","getElementById","URL","process","href","origin","addEventListener","headers","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.33cb62f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"MovieDetails_container__1V0og\",\"header\":\"MovieDetails_header__1jF6Q\",\"title\":\"MovieDetails_title__KWSzd\",\"release\":\"MovieDetails_release__2xKrt\",\"content\":\"MovieDetails_content__ETBgC\",\"poster\":\"MovieDetails_poster__3gAc2\",\"contentColumn\":\"MovieDetails_contentColumn__1GPLu\",\"tagsAndRate\":\"MovieDetails_tagsAndRate__3Sv91\",\"infoContainer\":\"MovieDetails_infoContainer__2ktTg\",\"info\":\"MovieDetails_info__3b9Qx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchResult\":\"SearchResult_searchResult__1BLKj\",\"column\":\"SearchResult_column__17DO4\",\"header\":\"SearchResult_header__eAGcL\",\"innerHeader\":\"SearchResult_innerHeader__3OxMM\",\"poster\":\"SearchResult_poster__P9IXF\",\"title\":\"SearchResult_title__ZhnDT\",\"releaseDate\":\"SearchResult_releaseDate__38N6Q\",\"synopsis\":\"SearchResult_synopsis__13s7k\",\"mobileImage\":\"SearchResult_mobileImage__2rPHr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__279VB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"Search_search__2g15Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__O4Dze\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"circle\":\"Circle_circle__SNN2G\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tags\":\"TagList_tags__1rx4k\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainSection\":\"App_mainSection__eoJwT\"};","import React from 'react';\r\nimport styles from './styles/Header.module.css';\r\nimport { Link } from 'react-router-dom';\r\nconst Header = () => {\r\n  return (\r\n    <header className={styles.header}>\r\n      <span>\r\n        <Link to=\"/\">Movies</Link>\r\n      </span>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","export const API_KEY = '4550f1f87b0fbedf6aaed73883e8445c';\r\nexport const ptBR = 'pt-BR';\r\nexport const BASE_URL = 'https://api.themoviedb.org/3/';\r\n\r\nexport const GENRE_IDS_URL = `${BASE_URL}genre/movie/list?api_key=${API_KEY}&language=${ptBR}`;\r\n\r\nexport const TV_GENRE_IDS_URL = `${BASE_URL}genre/tv/list?api_key=${API_KEY}&language=${ptBR}`;\r\n\r\nexport const API_CONFIG = `${BASE_URL}configuration?api_key=${API_KEY}`;\r\n\r\nexport const MOVIES_QUERY = (query, genre = null, year = null, page = 1) => {\r\n  if (genre)\r\n    return `${BASE_URL}discover/movie?api_key=${API_KEY}&language=${ptBR}&sort_by=popularity.desc&include_adult=false&include_video=true&page=${page}&with_genres=${genre}`;\r\n  if (year)\r\n    return `${BASE_URL}discover/movie?api_key=${API_KEY}&language=${ptBR}&sort_by=popularity.desc&include_adult=false&include_video=true&page=${page}&year=${year}`;\r\n  return `${BASE_URL}search/movie?api_key=${API_KEY}&language=${ptBR}&query=${encodeURIComponent(\r\n    query,\r\n  )}&page=${page}&include_adult=false`;\r\n};\r\n\r\nexport const MOVIE_DETAILS_URL = (movie_id) =>\r\n  `${BASE_URL}movie/${movie_id}?api_key=${API_KEY}&language=${ptBR}&append_to_response=videos`;\r\n\r\nexport const GET_API_CONFIGS = async () => {\r\n  if (!localStorage.getItem('API_CONFIGS')) {\r\n    const config = await fetch(API_CONFIG);\r\n    const jsonConfig = await config.json();\r\n    localStorage.setItem('API_CONFIGS', JSON.stringify(jsonConfig));\r\n  }\r\n  return JSON.parse(localStorage.getItem('API_CONFIGS'));\r\n};\r\n\r\nexport const GET_API_GENRES = async () => {\r\n  if (!localStorage.getItem('GENRES')) {\r\n    const movieFetch = await fetch(GENRE_IDS_URL);\r\n    const movieJSON = await movieFetch.json();\r\n    const TVFetch = await fetch(TV_GENRE_IDS_URL);\r\n    const TvJSON = await TVFetch.json();\r\n    localStorage.setItem('GENRES_MOVIES', JSON.stringify(movieJSON));\r\n    localStorage.setItem('GENRES_TV', JSON.stringify(TvJSON));\r\n  }\r\n\r\n  const movieJSON = JSON.parse(localStorage.getItem('GENRES_MOVIES'));\r\n  const TvJSON = JSON.parse(localStorage.getItem('GENRES_TV'));\r\n  // filtra a lista de generos de filme e TV, e as une em um array\r\n  // filmes vêm com generos misturados que estão na lista de TV\r\n  const filteredGenres = [\r\n    ...movieJSON.genres,\r\n    ...TvJSON.genres.filter(\r\n      (tv_genre) =>\r\n        !movieJSON.genres.some((movie_genre) => movie_genre.id === tv_genre.id),\r\n    ),\r\n  ];\r\n  return filteredGenres;\r\n};\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { MOVIES_QUERY, GET_API_CONFIGS, GET_API_GENRES } from './API';\r\n\r\nconst SearchContext = createContext();\r\n\r\nexport const SearchStorage = ({ children }) => {\r\n  const [tags, setTags] = useState(null);\r\n  const [query, setQuery] = useState('');\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [totalResults, setTotalResults] = useState(0);\r\n  const [apiPage, setApiPage] = useState(1);\r\n  const [selectedMovie, setSelectedMovie] = useState(null);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n\r\n  // carrega os generos da api\r\n  useEffect(() => {\r\n    if (tags !== null) return;\r\n\r\n    const getGenres = async () => {\r\n      const genres = await GET_API_GENRES();\r\n      setTags(genres);\r\n      // console.log(genres);\r\n    };\r\n    getGenres();\r\n  }, [tags]);\r\n\r\n  // const [currentQueryConfigs, setCurrentQueryConfigs] = useState(null);\r\n  // const loadMore = () => {\r\n  //   loadQuery(\r\n  //     currentQueryConfigs.query,\r\n  //     currentQueryConfigs.genre,\r\n  //     currentQueryConfigs.year,\r\n  //     apiPage + 1,\r\n  //   );\r\n  //   setApiPage((w) => w + 1);\r\n  // };\r\n\r\n  const loadQuery = async (query, genre, year, page) => {\r\n    if (query.trim().length < 1) return;\r\n    // console.log(query);\r\n    // setCurrentQueryConfigs({ query, genre, year, page });\r\n\r\n    const response = await fetch(MOVIES_QUERY(query, genre, year, page));\r\n    const json = await response.json();\r\n    let config = await GET_API_CONFIGS();\r\n\r\n    setTotalResults(json.total_results);\r\n    // console.log(json, 'json');\r\n    setApiPage(page);\r\n\r\n    // helper para criar o objeto do filme a partir do resultado\r\n    const getResultData = (result, config) => {\r\n      return {\r\n        id: result.id,\r\n        title: result.title,\r\n        release: new Date(result.release_date).toLocaleDateString(),\r\n        synopsis: result.overview,\r\n        rate: result.vote_average,\r\n        tags: result.genre_ids.map(\r\n          (genre) => tags.find((tag) => tag.id === genre),\r\n          // faz a correspondencia entre os ids e os generos\r\n        ),\r\n        posterImg: result.poster_path\r\n          ? config.images.secure_base_url +\r\n            config.images.poster_sizes[3] +\r\n            result.poster_path\r\n          : null,\r\n      };\r\n    };\r\n    if (json.results) {\r\n      setSearchResults(\r\n        json.results.map((result) => getResultData(result, config)),\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSearch = (event, query) => {\r\n    event.preventDefault();\r\n    if (query.length < 2) return;\r\n\r\n    // busca especificamente por um genero com o endpoint discover\r\n    let genreID = tags.findIndex(\r\n      (tag) => tag.name.toLowerCase() === query.toLocaleLowerCase(),\r\n    );\r\n    if (genreID !== -1) {\r\n      loadQuery(query, tags[genreID].id, null, apiPage);\r\n      return;\r\n    }\r\n    loadQuery(query, null, null, apiPage);\r\n    setCurrentPage(1);\r\n  };\r\n\r\n  return (\r\n    <SearchContext.Provider\r\n      value={{\r\n        searchResults,\r\n        query,\r\n        setQuery,\r\n        handleSearch,\r\n        totalResults,\r\n        selectedMovie,\r\n        setSelectedMovie,\r\n        currentPage,\r\n        setCurrentPage,\r\n      }}\r\n    >\r\n      {children}\r\n    </SearchContext.Provider>\r\n  );\r\n};\r\n\r\nexport default SearchContext;\r\n","import React, { useRef, useContext } from 'react';\r\nimport styles from './styles/Search.module.css';\r\nimport SearchContext from '../SearchContext';\r\n\r\nconst Search = () => {\r\n  const searchInput = useRef();\r\n  const { handleSearch, query, setQuery } = useContext(SearchContext);\r\n\r\n  return (\r\n    <form onSubmit={(event) => handleSearch(event, searchInput.current.value)}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Busque um filme por nome, ano ou gênero...\"\r\n        className={styles.search}\r\n        value={query}\r\n        onChange={({ target }) => setQuery(target.value)}\r\n        onBlur={(event) => handleSearch(event, query)}\r\n        ref={searchInput}\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport styles from './styles/Circle.module.css';\r\n\r\nconst Circle = ({ content, width, font }) => {\r\n  return (\r\n    <div\r\n      className={styles.circle}\r\n      style={{\r\n        width: width || '50px',\r\n        height: width || '50px',\r\n        fontSize: font || '1.2rem',\r\n      }}\r\n    >\r\n      {content}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Circle;\r\n","import React from 'react';\r\nimport styles from './styles/Paginator.module.css';\r\nimport Circle from './Circle';\r\n\r\nconst Paginator = ({ current, action, pages }) => {\r\n  return (\r\n    <nav className={styles.paginator}>\r\n      {Array(pages || 1)\r\n        .fill()\r\n        .map((page, index) => {\r\n          ++index;\r\n          return (\r\n            <button\r\n              key={index}\r\n              onClick={({ target }) => {\r\n                target.scrollIntoView(); // chrome dá um pequeno scrollUp a cada click :(\r\n                action(index);\r\n              }}\r\n            >\r\n              {/* // exibe o cículo na página atual */}\r\n              {index === current ? (\r\n                <Circle content={index} width=\"45px\" />\r\n              ) : (\r\n                index\r\n              )}\r\n            </button>\r\n          );\r\n        })}\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport styles from './styles/TagList.module.css';\r\n\r\nconst TagList = ({ tags }) => {\r\n  return (\r\n    <ul className={styles.tags}>\r\n      {tags.map((tag) => (\r\n        <li key={Math.random()}>{tag.name}</li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TagList;\r\n","import React from 'react';\r\nimport styles from './styles/SearchResult.module.css';\r\nimport Circle from './Circle';\r\nimport TagList from './TagList';\r\n\r\nconst SearchResult = ({\r\n  title,\r\n  rate,\r\n  releaseDate,\r\n  synopsis,\r\n  tags,\r\n  poster,\r\n  onClick,\r\n}) => {\r\n  return (\r\n    <>\r\n      <div className={styles.searchResult}>\r\n        <div\r\n          className={styles.poster}\r\n          style={{ backgroundImage: poster ? `url('${poster}')` : '' }}\r\n        ></div>\r\n        <div className={styles.column}>\r\n          <div className={styles.header}>\r\n            <div className={styles.innerHeader}>\r\n              <Circle content={rate} width=\"65px\" className={styles.rating} />\r\n              <div\r\n                style={{\r\n                  display: 'flex',\r\n                  flexDirection: 'column',\r\n                  paddingLeft: '20px',\r\n                }}\r\n              >\r\n                <span className={styles.title}>{title}</span>\r\n                <span className={styles.releaseDate}>{releaseDate}</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div style={{ paddingLeft: '40px' }}>\r\n            <div className={styles.synopsis}>\r\n              <img\r\n                src={poster}\r\n                alt=\"poster\"\r\n                className={styles.mobileImage}\r\n              ></img>\r\n\r\n              <p>{synopsis || 'Descrição não disponível'}</p>\r\n            </div>\r\n            <TagList tags={tags} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResult;\r\n","import React, { useContext } from 'react';\r\nimport Paginator from './Paginator';\r\nimport SearchResult from './SearchResult';\r\nimport { Link } from 'react-router-dom';\r\nimport SearchContext from '../SearchContext';\r\n\r\nconst ResultList = () => {\r\n  const {\r\n    searchResults,\r\n    totalResults,\r\n    setSelectedMovie,\r\n    currentPage,\r\n    setCurrentPage,\r\n  } = useContext(SearchContext);\r\n  const maxResults = 5;\r\n  const pages = Math.ceil(searchResults.length / maxResults);\r\n  let from = maxResults * (currentPage - 1);\r\n  let to = maxResults * currentPage;\r\n\r\n  // define o filme selecionado ao clicar sobre\r\n  const selectMovie = (id) => {\r\n    const index = searchResults.findIndex((movieData) => movieData.id === id);\r\n    setSelectedMovie(searchResults[index]);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {searchResults.slice(from, to).map((data) => (\r\n        <Link\r\n          to=\"/detalhes\"\r\n          key={'clickable' + data.id}\r\n          onClick={() => selectMovie(data.id)} // div necessária para habilitar click sobre os resultados\r\n          style={{ width: '100%' }}\r\n        >\r\n          <SearchResult\r\n            key={data.id}\r\n            title={data.title}\r\n            releaseDate={data.release}\r\n            synopsis={data.synopsis}\r\n            rate={`${data.rate * 10}%`}\r\n            tags={data.tags}\r\n            poster={data.posterImg}\r\n          />\r\n        </Link>\r\n      ))}\r\n      {searchResults.length !== 0 && (\r\n        <Paginator\r\n          pages={pages}\r\n          current={currentPage}\r\n          action={(page) => setCurrentPage(page)}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ResultList;\r\n","import React from 'react';\r\nimport Search from '../Search';\r\nimport ResultList from '../ResultList';\r\nimport styles from '../../App.module.css';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <main className={styles.mainSection}>\r\n      <Search />\r\n      <ResultList />\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\nimport styles from './styles/MovieDetails.module.css';\r\n\r\nconst InfoBlock = ({ column, value }) => {\r\n  return (\r\n    <div className={styles.info}>\r\n      <span>{column}</span>\r\n      <span>{value}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InfoBlock;\r\n","export const format = (value) => {\r\n  if (isNaN(value) || value === 0 || !isFinite(value)) return 'Não disponível';\r\n  return new Intl.NumberFormat('en-US', {\r\n    style: 'currency',\r\n    currency: 'USD',\r\n  }).format(value);\r\n};\r\n\r\nexport const timeFormat = (value) =>\r\n  `${parseInt(value / 60)}h${parseInt(value % 60)}min`;\r\n\r\nexport const releaseStatus = (value) => {\r\n  if (typeof value !== 'string') return;\r\n  value = value.toLowerCase();\r\n\r\n  if (value === 'released') return 'Lançado';\r\n  if (value === 'in production') return 'Em produção';\r\n  if (value === 'post production') return 'Pós produção';\r\n  if (value === 'canceled') return 'Cancelado';\r\n  if (value === 'rumored') return 'Previsto';\r\n};\r\n\r\nexport const getLanguage = (detailedInfo) => {\r\n  try {\r\n    return detailedInfo.spoken_languages[0].name;\r\n  } catch (err) {\r\n    return 'Não disponível';\r\n  }\r\n};\r\n\r\nexport const getVideoKey = (detailedInfo) => {\r\n  try {\r\n    return detailedInfo.videos.results[0].key;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport styles from './styles/MovieDetails.module.css';\r\nimport TagList from './TagList';\r\nimport Circle from './Circle';\r\nimport { MOVIE_DETAILS_URL } from '../API';\r\nimport InfoBlock from './InfoBlock';\r\nimport {\r\n  getVideoKey,\r\n  releaseStatus,\r\n  timeFormat,\r\n  format,\r\n  getLanguage,\r\n} from '../utils';\r\nimport { useNavigate, Navigate } from 'react-router-dom';\r\n\r\nconst MovieDetails = ({ movie }) => {\r\n  const [detailedInfo, setDetailedInfo] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    if (detailedInfo !== null || !movie) return;\r\n\r\n    const getData = async () => {\r\n      const response = await fetch(MOVIE_DETAILS_URL(movie.id));\r\n      const json = await response.json();\r\n\r\n      setDetailedInfo(json);\r\n      // console.log(json);\r\n    };\r\n    getData();\r\n  }, [detailedInfo, movie, navigate]);\r\n\r\n  if (!movie) {\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <div className={styles.header}>\r\n        <span className={styles.title}>{movie.title}</span>\r\n        <span className={styles.release}>{movie.release}</span>\r\n      </div>\r\n      <div className={styles.content}>\r\n        <div className={styles.contentColumn}>\r\n          <h2>Sinopse</h2>\r\n          <p>{movie.synopsis || 'Não disponível'}</p>\r\n          <h2>Informações</h2>\r\n          <div className={styles.infoContainer}>\r\n            {detailedInfo && (\r\n              <>\r\n                <InfoBlock\r\n                  column=\"Situação\"\r\n                  value={releaseStatus(detailedInfo.status)}\r\n                />\r\n                <InfoBlock column=\"Idioma\" value={getLanguage(detailedInfo)} />\r\n                <InfoBlock\r\n                  column=\"Duração\"\r\n                  value={timeFormat(detailedInfo.runtime)}\r\n                />\r\n                <InfoBlock\r\n                  column=\"Orçamento\"\r\n                  value={format(detailedInfo.budget)}\r\n                />\r\n                <InfoBlock\r\n                  column=\"Receita\"\r\n                  value={format(detailedInfo.revenue)}\r\n                />\r\n                <InfoBlock\r\n                  column=\"Lucro\"\r\n                  value={format(detailedInfo.revenue - detailedInfo.budget)}\r\n                />\r\n              </>\r\n            )}\r\n          </div>\r\n          <div className={styles.tagsAndRate}>\r\n            <TagList tags={movie.tags} />\r\n            <Circle\r\n              content={`${movie.rate * 10}%`}\r\n              width=\"100px\"\r\n              font=\"2.5rem\"\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className={styles.poster}>\r\n          <img src={movie.posterImg} alt=\"poster\"></img>\r\n        </div>\r\n      </div>\r\n      {detailedInfo && getVideoKey(detailedInfo) && (\r\n        <iframe\r\n          width=\"100%\"\r\n          height=\"500\"\r\n          title=\"video\"\r\n          src={`https://www.youtube.com/embed/${getVideoKey(detailedInfo)}`}\r\n          frameBorder=\"0\"\r\n          allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\"\r\n          allowFullScreen\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetails;\r\n","import React, { useContext } from 'react';\r\nimport SearchContext from '../../SearchContext';\r\nimport MovieDetails from '../MovieDetails';\r\n\r\nconst Detalhes = () => {\r\n  const { selectedMovie } = useContext(SearchContext);\r\n  return <MovieDetails movie={selectedMovie} />;\r\n};\r\n\r\nexport default Detalhes;\r\n","import React from 'react';\nimport Header from './components/Header';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\nimport Home from './components/pages/Home';\nimport { SearchStorage } from './SearchContext';\nimport Detalhes from './components/pages/Detalhes';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Header />\n      <SearchStorage>\n        <Routes>\n          <Route path=\"/detalhes\" element={<Detalhes />} />\n          <Route path=\"*\" element={<Home />} />\n        </Routes>\n      </SearchStorage>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}